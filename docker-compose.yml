version: '3'
services:
    frontend-nodejs:
        image: node:10.11-jessie
        volumes:
            - ./frontend:/var/www/frontend
        working_dir: /var/www/frontend
        tty: true
        networks:
            - code-network

    frontend-nginx:
        build:
            context: ./frontend/docker
            dockerfile: Dockerfile
        volumes:
            - ./frontend:/var/www/frontend
        ports:
            - "8080:80"
        depends_on:
            - api-nginx
        networks:
            - code-network

    api-nginx:
        build:
            context: ./api/docker
            dockerfile: nginx.docker
        volumes:
            - ./api:/var/www/api
        ports:
            - "8081:80"
        depends_on:
            - api-php-fpm
            - api-postgres
        networks:
            - code-network

    api-php-fpm:
        build:
            context: ./api/docker
            dockerfile: php-fpm.docker
        volumes:
            - ./api:/var/www/api
        depends_on:
            - api-postgres
            - mailer
            - rabbitmq
        networks:
            - code-network

    api-php-cli:
        build:
            context: ./api/docker
            dockerfile: php-cli.docker
        volumes:
            - ./api:/var/www/api
        depends_on:
            - api-postgres
            - mailer
            - rabbitmq
        working_dir: /var/www/api
        tty: true
        networks:
            - code-network

    api-postgres:
        image: postgres:9.6-alpine
        volumes:
            - api-postgresql-volume:/var/lib/postgresql/data
        environment:
            - "POSTGRES_USER=api"
            - "POSTGRES_PASSWORD=api"
            - "POSTGRES_DB=api"
        ports:
            - "54321:5432"
        networks:
            - code-network

    mailer:
        image: mailhog/mailhog
        restart: unless-stopped
        ports:
            - "10251:1025"
            - "8082:8025"
        networks:
            - code-network

    rabbitmq:
        image: rabbitmq:3-management
        environment:
            RABBITMQ_ERLANG_COOKIE: SWQOKODSQALRPCLNMEQG
            RABBITMQ_DEFAULT_USER: rabbit
            RABBITMQ_DEFAULT_PASS: rabbit
        ports:
            - "8083:15672"
            - "5672:5672"
        volumes:
            - ./api/docker/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
        networks:
            - code-network

networks:
    code-network:
        driver: bridge

volumes:
    api-postgresql-volume:
        external: true
